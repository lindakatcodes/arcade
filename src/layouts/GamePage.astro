---
import MachineHead from "@components/MachineHead.astro";
import MachinePanel from "@components/MachinePanel.astro";
import Layout from "@layouts/Layout.astro";
import type { CollectionEntry } from "astro:content";

interface Props {
  game: CollectionEntry<"games">;
  gameColor: string;
}

const { game, gameColor } = Astro.props;
---

<Layout title={game.data.title}>
  <main>
    <div class="machine">
      <div class={`left ${gameColor}`}>
        <div class={`l-edge ${gameColor}`}></div>
      </div>
      <div class="middle">
        <MachineHead name={game.data.title} gameColor={gameColor} shouldShow />
        <section class="screen">
          <div class={`game ${gameColor}`}>
            <slot />
          </div>
        </section>
        <MachinePanel gameColor={gameColor} shouldShow>
          <p>Some text for now to see where the panel is</p>
        </MachinePanel>
      </div>
      <div class={`right ${gameColor}`}>
        <div class={`r-edge ${gameColor}`}></div>
      </div>
    </div>
  </main>
</Layout>

<style>
  main {
    background-color: var(--c-black);
    display: grid;
    place-items: center;
  }

  .machine {
    display: grid;
    grid-template-columns: 5% 90% 5%;
    grid-template-rows: 10% 70% 20%;
    width: 100%;
    max-width: 700px;
    height: 100dvh;
  }

  .left {
    grid-column: 1 / 2;
    grid-row: 1 / 4;
    width: 100%;
    background-color: var(--c-black);
    border-width: 2px;
    border-style: solid;
    border-top-color: transparent;
    border-right-color: transparent;
    border-bottom-color: transparent;
  }

  .l-edge {
    width: 0.8rem;
    height: 85dvh;
    border-radius: 0 0 1rem 0;
    border-right-width: 6px;
    border-right-style: solid;
    border-bottom-width: 6px;
    border-bottom-style: solid;
    border-top-color: transparent;
    border-left-color: transparent;
    background-color: var(--c-base);
    z-index: 1;
  }

  .right {
    grid-column: 3 / 4;
    grid-row: 1 / 4;
    width: 100%;
    background-color: var(--c-black);
    border-width: 2px;
    border-style: solid;
    border-top-color: transparent;
    border-left-color: transparent;
    border-bottom-color: transparent;
  }

  .r-edge {
    width: 0.8rem;
    height: 85dvh;
    border-radius: 0 0 0 1rem;
    border-left-width: 6px;
    border-left-style: solid;
    border-bottom-width: 6px;
    border-bottom-style: solid;
    border-top-color: transparent;
    border-right-color: transparent;
    background-color: var(--c-base);
    z-index: 1;
    float: right;
  }

  .middle {
    grid-column: 2 / 3;
    grid-row: 1 / 4;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: subgrid;
    background-color: var(--c-base);
    width: 100%;
  }

  .middle .m-head {
    grid-row: 1 / 2;
  }

  .middle .screen {
    grid-row: 2 / 3;
    border: 2px solid var(--c-black);
  }

  .game {
    border-width: 2px;
    border-style: ridge;
    border-radius: 10px;
    margin: 0.25rem 0.5rem;
    background-color: var(--c-white);
    height: calc(100% - 0.5rem);
    transform: scaleX(0.95);
  }

  .middle .m-panel {
    grid-row: 3 / 4;
  }
</style>
